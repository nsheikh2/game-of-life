package com.whatever.gameoflife;
import java.awt.*;

import javax.swing.JButton;
import javax.swing.JFrame;
import java.applet.*;

public class Board extends JFrame{
	private static int rows;
	private static int columns;
	private static int cellSize;
	private static int canvasWidth;
	private static int canvasHeight;
	public Cell[][] cells;
	public Graphics g;

	public Board(int rows, int columns, int cellSize) {
		this.rows = rows;
		this.columns = columns;
		this.cellSize = cellSize;
		canvasWidth = columns * cellSize;
		canvasHeight = rows * cellSize;
		cells = new Cell[rows][columns];
		
		//resetBoard();
	}
	
	private void initBoard() {
		for(int i = 0; i < rows; i++)
			for(int j = 0; j < columns; j++)
				cells[i][j] = new Cell(i, j, Color.GRAY);
	}
	
	/*public void resetBoard() {
		for(int i = 0; i < rows; i++) {
			for(int j = 0; j < columns; j++) {
				cells[i][j].setColor(Color.GRAY);
				cells[i][j].paint(g, cellSize, cellSize);
			}
		}
	}*/
	
	public static void canvas()
	{
	 	JFrame f = new JFrame("Canvas");
	 	
	 	JButton startButton = new JButton();
		startButton.setText("Start");
		startButton.setSize(80,20);
		startButton.setLocation(0, canvasHeight);
		
		f.add(startButton);
		/*
		JButton resetButton = new JButton();
		resetButton.setText("Reset");
		resetButton.setSize(20, 20);
		*/
		
	 	f.add(new GameCanvas(canvasWidth, canvasHeight - 20, cellSize));  
	    f.setLayout(null);  
	    f.setSize(canvasWidth, canvasHeight);  
	    f.setVisible(true); 
	    
	}
	
	
	/**
	 * @return the rows
	 */
	public int getRows() {
		return rows;
	}

	/**
	 * @param rows the rows to set
	 */
	public void setRows(int rows) {
		this.rows = rows;
	}

	/**
	 * @return the columns
	 */
	public int getColumns() {
		return columns;
	}

	/**
	 * @param columns the columns to set
	 */
	public void setColumns(int columns) {
		this.columns = columns;
	}

	/**
	 * @return the cellSize
	 */
	public int getCellSize() {
		return cellSize;
	}

	/**
	 * @param cellSize the cellSize to set
	 */
	public void setCellSize(int cellSize) {
		this.cellSize = cellSize;
	}

	/**
	 * @return the canvasWidth
	 */
	public int getCanvasWidth() {
		return canvasWidth;
	}

	/**
	 * @param canvasWidth the canvasWidth to set
	 */
	public void setCanvasWidth(int canvasWidth) {
		this.canvasWidth = canvasWidth;
	}

	/**
	 * @return the canvasHeight
	 */
	public int getCanvasHeight() {
		return canvasHeight;
	}

	/**
	 * @param canvasHeight the canvasHeight to set
	 */
	public void setCanvasHeight(int canvasHeight) {
		this.canvasHeight = canvasHeight;
	}
	
	
	
}
